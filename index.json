[{"content":"What are Delegates? In Unreal Engine, delegates provide a callback system that lets one piece of code notify others when an event occurs. This enables an event-driven approach by decoupling the sender from the receivers, making code more modular and maintainable.\nTypes of Delegates Unreal Engine provides four main types of delegates, each suited to different needs:\nSimple \u0026ndash; Holds a single bound function Multicast \u0026ndash; Invokes multiple bound functions Dynamic \u0026ndash; Single delegate that supports reflection and Blueprint binding Dynamic Multicast \u0026ndash; Multicast delegate with reflection and Blueprint binding Simple Delegate In order to declare a simple delegate, we need to use the DECLARE_DELEAGE(DelegateName) macro. The code below shows the declaration of a simple delegate.\nDECLARE_DELEGATE(FOnMyEventOccured); Remember that delegate declarations should be placed in a header file that includes its .generated.h file.\nAfter declaring a delegate type, we can create instances of it:\nFOnMyEventOccured OnMyEventOccured; Now, we can bind our delegate and execute it. There are several functions for binding simple delegates that each one of them is used for a specific type of receivers:\nBindStatic BindLambda BindSPLambda BindWeakLambda BindRaw BindSP BindThreadSafeSP BindUFunction BindUObject Let\u0026rsquo;s talk about how to use each of them:\nBindStatic : Can be used to bind a global or a static member function. It can also bind lambdas which don\u0026rsquo;t have any captures:\nvoid ReceiverFunction() { UE_LOG(LogTemp, Warning, TEXT(\u0026#34;ReceiverFunction called\u0026#34;)); } class Foo { public: static void StaticReceiverFunction(); }; void Foo::StaticReceiverFunction() { UE_LOG(LogTemp, Warning, TEXT(\u0026#34;StaticReceiverFunction called\u0026#34;)); } void TestDelegate() { FOnMyEventOccured OnMyEventOccured; // Binding a global function OnMyEventOccured.BindStatic(\u0026amp;ReceiverFunction); if (OnMyEventOccured.IsBound()) OnMyEventOccured.Execute(); // Calls ReceiverFunction // Binding a static member function OnMyEventOccured.BindStatic(\u0026amp;Foo::StaticReceiverFunction); if (OnMyEventOccured.IsBound()) OnMyEventOccured.Execute(); // Calls Foo::StaticReceiverFunction // Binding a captureless lambda OnMyEventOccured.BindStatic([](){ UE_LOG(LogTemp, Warning, TEXT(\u0026#34;Lambda called\u0026#34;)); }); if (OnMyEventOccured.IsBound()) OnMyEventOccured.Execute(); // Calls the lambda // // The one below won\u0026#39;t compile because of the capture: // // int C; // OnMyEventOccured.BindStatic([C](){}); // } BindLambda :\nBindSPLambda :\nBindWeakLambda :\nBindRaw :\nBindSP :\nBindThreadSafeSP :\nBindUFunction :\nBindUObject :\nMulticast Delegate Dynamic Delegate Dynamic Multicast Delegate ","permalink":"https://ali-askari-dev.github.io/posts/post1/","summary":"Understand the different types of delegates in Unreal Engine and when to use each one","title":"Mastering Delegates in Unreal Engine"}]